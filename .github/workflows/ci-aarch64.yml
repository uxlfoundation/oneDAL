#===============================================================================
# Copyright contributors to the oneDAL project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#===============================================================================

name: "CI AArch64"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  DEP_DIR: ${{ github.workspace }}/__deps
  PYTHON_VERSION: '3.12'

# Stop stale workflows when pull requests are updated: https://stackoverflow.com/a/70972844
# Does not apply to the main branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref_name }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

# Declare default permissions as read only.
permissions: read-all

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [
          { name: LinuxMakeGNU_OpenBLAS(SVE, GitHub), label: ubuntu-24.04-arm },
          { name: LinuxMakeGNU_OpenBLAS(SVE, Arm hosted), label: ah-ubuntu_24_04-c6g_2x-50 }
        ]

    name: ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.label }}
    steps:

      # Faster builds where possible. Fix version of CMake and Ninja.
      # Note: This will create a github actions cache
      - name: Get CMake and Ninja
        uses: lukka/get-cmake@56d043d188c3612951d8755da8f4b709ec951ad6 # v3.31.6
        with:
          cmakeVersion: 3.31.0
          ninjaVersion: 1.12.0

      - name: Checkout oneDAL
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Checkout oneTBB
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: uxlfoundation/oneTBB
          ref: v2022.0.0
          path: oneTBB

      # TODO: Cache oneTBB
      - name: Configure oneTBB
        run: cmake -S. -Bbuild  -DTBB_TEST=OFF
        env:
          CMAKE_BUILD_TYPE: Release
          CMAKE_INSTALL_PREFIX: ${{ env.DEP_DIR }}
          CMAKE_GENERATOR: Ninja
        working-directory: ${{ github.workspace }}/oneTBB

      - name: Build oneTBB
        run: cmake --build build --target install
        working-directory: ${{ github.workspace }}/oneTBB

      - name: Install OpenBLAS
        run: .ci/env/apt.sh openblas

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set environment variables
        run: |
          echo "TBBROOT=${{ env.DEP_DIR }}" >> "$GITHUB_ENV"
          echo "OPENBLASROOT=${{ env.DEP_DIR }}" >> "$GITHUB_ENV"

      - name: System Info
        run: .ci/scripts/describe_system.sh
  
      - name: make daal
        run: |
          .ci/scripts/build.sh --compiler gnu --optimizations sve --target daal --backend-config ref --blas-dir $OPENBLASROOT --tbb-dir $TBBROOT

      - name: make onedal_c
        run: |
          .ci/scripts/build.sh --compiler gnu --optimizations sve --target onedal_c --backend-config ref --blas-dir $OPENBLASROOT --tbb-dir $TBBROOT      

      - name: daal/cpp examples
        run: |
          .ci/scripts/test.sh --test-kind examples --build-dir __release_lnx_gnu --compiler gnu --interface daal/cpp --build-system cmake --backend ref
        env:
          CMAKE_GENERATOR: Ninja

      - name: oneapi/cpp examples
        run: |
          .ci/scripts/test.sh --test-kind examples --build-dir __release_lnx_gnu --compiler gnu --interface oneapi/cpp --build-system cmake --backend ref
        env:
          CMAKE_GENERATOR: Ninja
  # This job adds a check named "CI AArch64" that represents overall
  # workflow status and can be used in branch rulesets. This is useful when
  # running a matrix CI, and allows changing the CI without needing to change
  # the overall required check name.
  status:
    needs: build-and-test
    runs-on: ubuntu-latest
    name: "CI AArch64"
    steps:
      - name: Print success
        run: echo Success

#===============================================================================
# Copyright contributors to the oneDAL project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#===============================================================================

name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref_name }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  LinuxMakeDPCPP:
    name: LinuxMakeDPCPP(AVX512)
    if: github.repository == 'uxlfoundation/oneDAL'
    runs-on: uxl-gpu-4xlarge
    env:
      TEST1: ${{ github.repository == 'uxlfoundation/oneDAL' }}
      TEST2: ${{ github.event_name == 'pull_request' }}
      TEST3: ${{ !(contains(toJson(github.event.pull_request.labels.*.name), '"API/ABI breaking change"')) }}
      TEST4: |
        ${{ github.repository == 'uxlfoundation/oneDAL' &&
        github.event_name == 'pull_request' &&
        !(contains(toJson(github.event.pull_request.labels.*.name), '"API/ABI breaking change"')) }}
      TEST5: |
        ${{ github.event_name == 'pull_request' &&
        !(contains(toJson(github.event.pull_request.labels.*.name), '"API/ABI breaking change"')) }}
      TEST6: ${{ github.repository == 'uxlfoundation/oneDAL' && github.event_name == 'pull_request' && !(contains(toJson(github.event.pull_request.labels.*.name), '"API/ABI breaking change"')) }}
    timeout-minutes: 120

    steps:
      - name: Checkout oneDAL
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install DPC++
        run: .ci/env/apt.sh dpcpp
      - name: Install MKL
        run: .ci/env/apt.sh mkl
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      # Miniforge is necessary in order to get Intel MPI from conda-forge for MPI examples
      - name: Install Miniforge
        run: .ci/env/apt.sh miniforge
      - name: System Info
        run: |
          source /opt/intel/oneapi/setvars.sh
          .ci/scripts/describe_system.sh
      - name: Make daal
        run: |
          source /opt/intel/oneapi/setvars.sh
          .ci/scripts/build.sh --compiler icx  --optimizations avx512 --target daal
      - name: Make onedal
        run: |
          source /opt/intel/oneapi/setvars.sh
          .ci/scripts/build.sh --compiler icx  --optimizations avx512 --target onedal
      - name: Archive build
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: __release_lnx
          path: ./__release_lnx
      - name: Archive oneDAL environment
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: oneDAL_env
          path: .ci/env

  LinuxABICheck:
    name: ABI Conformance
    needs: LinuxMakeDPCPP
    if: >
      ${{ github.repository == 'uxlfoundation/oneDAL' &&
      github.event_name == 'pull_request' &&
      !(contains(toJson(github.event.pull_request.labels.*.name), '"API/ABI breaking change"')) }}
    runs-on: ubuntu-24.04
    env:
      LIBABIGAIL_DEFAULT_USER_SUPPRESSION_FILE: ${{ github.workspace }}/.github/.abignore
    timeout-minutes: 20

    steps:
      - name: Checkout oneDAL
        uses: actions/checkout@v4
      - name: install ABI checking tools
        run: .ci/env/apt.sh abigail
      - name: Get run ID of "CI" workflow
        id: get-run-id
        run: |
          OTHER_REPO="icfaust/oneDAL"
          WF_NAME="Nightly-build"
          JQ_QUERY='map(select(.event == "schedule")) | .[0].databaseId'
          RUN_ID=`gh run --repo ${OTHER_REPO} list --workflow "${WF_NAME}" --json databaseId,event --status success --jq "${JQ_QUERY}"`
          echo "Detected latest run id of ${RUN_ID} for workflow ${WF_NAME}"
          echo "run-id=${RUN_ID}" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Download oneDAL main build artifact
        uses: actions/download-artifact@v4
        with:
          name: __release_lnx
          github-token: ${{ github.token }}
          repository: icfaust/oneDAL
          run-id: ${{ steps.get-run-id.outputs.run-id }}
          path: ./__release_lnx_main
      - name: Download oneDAL build artifact
        uses: actions/download-artifact@v4
        with:
          name: __release_lnx
          path: ./__release_lnx
      - name: Check ABI conformance
        run: .ci/scripts/abi_check.sh __release_lnx_main/daal/latest/lib/intel64/ __release_lnx/daal/latest/lib/intel64/
